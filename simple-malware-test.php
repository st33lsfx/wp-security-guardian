<?php
/**
 * Simple malware detection test - bez WordPress závislostí
 */

echo "<h2>🔍 Jednoduchý test malware detekce</h2>\n";

// Testovací soubor
$test_file = '/Users/ondrejnemec/Local Sites/base-claude/app/public/wp-content/themes/unifer-base-theme/test-malware.php';

if (!file_exists($test_file)) {
    die('❌ Testovací soubor neexistuje: ' . $test_file);
}

echo "<p>✅ Testovací soubor existuje</p>\n";

// Přečtěte obsah
$content = file_get_contents($test_file);
echo "<h3>📄 Obsah testovacího souboru:</h3>\n";
echo "<pre style='background:#f5f5f5; padding:10px; border:1px solid #ccc;'>\n";
echo htmlspecialchars($content);
echo "</pre>\n";

echo "<h3>🔬 Spouštím malware detekci...</h3>\n";

// Enhanced malware patterns - přesně jako v pluginu
$malware_patterns = array(
    // PHP backdoors a webshells - enhanced detection
    '/eval\s*\(\s*base64_decode\s*\(/i' => array('score' => 5, 'type' => 'PHP_BACKDOOR'),
    '/eval\s*\(\s*gzinflate\s*\(/i' => array('score' => 5, 'type' => 'PHP_BACKDOOR'),
    '/eval\s*\(\s*str_rot13\s*\(/i' => array('score' => 4, 'type' => 'PHP_BACKDOOR'),
    '/eval\s*\(\s*\$_[GET|POST|REQUEST|COOKIE]/i' => array('score' => 5, 'type' => 'PHP_BACKDOOR_DIRECT'),
    '/eval\s*\([^)]*\$_[GET|POST|REQUEST|COOKIE]/i' => array('score' => 4, 'type' => 'PHP_BACKDOOR_INDIRECT'),
    '/system\s*\(\s*\$_[GET|POST|REQUEST]/i' => array('score' => 5, 'type' => 'COMMAND_INJECTION'),
    '/exec\s*\(\s*\$_[GET|POST|REQUEST]/i' => array('score' => 5, 'type' => 'COMMAND_INJECTION'),
    '/shell_exec\s*\(\s*\$_[GET|POST|REQUEST]/i' => array('score' => 5, 'type' => 'COMMAND_INJECTION'),
    '/passthru\s*\(\s*\$_[GET|POST|REQUEST]/i' => array('score' => 5, 'type' => 'COMMAND_INJECTION'),
    '/\bbase64_decode\s*\(\s*["\'][\w+\/=]+["\']\s*\)/i' => array('score' => 3, 'type' => 'OBFUSCATION'),
    '/\$_[A-Z]+\[\w+\]\s*\(\s*\$/i' => array('score' => 4, 'type' => 'VARIABLE_FUNCTION'),
    '/create_function\s*\(/i' => array('score' => 4, 'type' => 'DEPRECATED_FUNCTION'),
    
    // File operations
    '/file_get_contents\s*\(\s*["\']https?:\/\//i' => array('score' => 3, 'type' => 'REMOTE_FILE_INCLUDE'),
    '/fwrite\s*\([^)]*\$_[GET|POST|REQUEST]/i' => array('score' => 4, 'type' => 'FILE_WRITE_INJECTION'),
    
    // Network operations
    '/curl_exec\s*\(/i' => array('score' => 2, 'type' => 'HTTP_REQUEST'),
    '/fsockopen\s*\(/i' => array('score' => 3, 'type' => 'SOCKET_CONNECTION'),
    
    // Obfuscation patterns
    '/[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*\s*=\s*["\'][^"\']*\\\\x[0-9a-f]{2}/i' => array('score' => 3, 'type' => 'HEX_OBFUSCATION'),
    '/preg_replace\s*\(\s*["\']\/.*\/e["\']/' => array('score' => 4, 'type' => 'PREG_REPLACE_EVAL'),
);

$threats = array();
$threat_score = 0;

foreach ($malware_patterns as $pattern => $info) {
    if (preg_match($pattern, $content, $matches)) {
        $threat_score += $info['score'];
        $threats[] = array(
            'type' => $info['type'],
            'score' => $info['score'],
            'pattern' => $pattern,
            'match' => isset($matches[0]) ? $matches[0] : 'N/A'
        );
        
        echo "<div style='color: red; font-weight: bold; margin: 10px 0; padding: 10px; border: 2px solid red; background: #ffe6e6;'>\n";
        echo "🚨 MALWARE DETEKOVÁNO!\n";
        echo "<br>Typ: " . $info['type'] . "\n";
        echo "<br>Skóre: " . $info['score'] . "\n";
        echo "<br>Vzor: " . htmlspecialchars($pattern) . "\n";
        echo "<br>Shoda: " . htmlspecialchars($matches[0]) . "\n";
        echo "</div>\n";
    }
}

// Celkové výsledky
echo "<h3>📊 Celkové výsledky:</h3>\n";
echo "<div style='padding: 15px; border: 2px solid " . ($threat_score >= 5 ? 'red' : ($threat_score >= 3 ? 'orange' : 'green')) . "; background: " . ($threat_score >= 5 ? '#ffe6e6' : ($threat_score >= 3 ? '#fff8dc' : '#e6ffe6')) . ";'>\n";

if (count($threats) > 0) {
    echo "<strong>⚠️ CELKOVÉ THREAT SKÓRE: " . $threat_score . "</strong><br>\n";
    echo "Počet detekovaných hrozeb: " . count($threats) . "<br>\n";
    
    if ($threat_score >= 5) {
        echo "<strong style='color: red;'>🔴 VYSOKÉ RIZIKO - Soubor obsahuje malware!</strong>\n";
    } elseif ($threat_score >= 3) {
        echo "<strong style='color: orange;'>🟡 STŘEDNÍ RIZIKO - Podezřelý obsah</strong>\n";
    } else {
        echo "<strong style='color: green;'>🟢 NÍZKÉ RIZIKO</strong>\n";
    }
} else {
    echo "<strong style='color: green;'>✅ Žádné malware vzory nebyly detekovány</strong>\n";
}
echo "</div>\n";

echo "<h3>🧪 Dodatečné testy:</h3>\n";

// Test na eval s $_POST
if (preg_match('/eval\s*\(\s*\$_POST/', $content)) {
    echo "<div style='color: red; font-weight: bold; margin: 10px 0;'>🚨 Detekován eval(\$_POST) - VYSOKÉ RIZIKO!</div>\n";
} else {
    echo "<div style='color: orange;'>⚠️ eval(\$_POST) nebyl detekován</div>\n";
}

// Test na jakýkoliv eval
if (preg_match('/eval\s*\(/i', $content)) {
    echo "<div style='color: red; font-weight: bold; margin: 10px 0;'>🚨 Detekována funkce eval() - RIZIKO!</div>\n";
} else {
    echo "<div style='color: green;'>✅ Funkce eval() nebyla nalezena</div>\n";
}

echo "<p style='color: red; font-weight: bold; margin-top: 20px;'>⚠️ DŮLEŽITÉ: Po dokončení testu smaže testovací soubor!</p>\n";
echo "<button onclick=\"if(confirm('Opravdu smazat testovací soubor?')) { window.location.href='?delete=1'; }\">🗑️ Smazat testovací soubor</button>\n";

// Smazání souboru pokud je požadováno
if (isset($_GET['delete']) && $_GET['delete'] == '1') {
    if (unlink($test_file)) {
        echo "<div style='color: green; font-weight: bold; margin: 10px 0;'>✅ Testovací soubor byl úspěšně smazán!</div>\n";
    } else {
        echo "<div style='color: red; font-weight: bold; margin: 10px 0;'>❌ Chyba při mazání testovacího souboru!</div>\n";
    }
}
?>